y
summary(bad)
y <-x[,1]
bad <-in.na(y)
bad <-is.na(y)
z <-y(!bad)
z <-y[!bad]
z
summary(z)
y <-x[,5]=6
x[,5]=6
good <-x[,5]=6
good <-x[,5]==6
y <-x[good,]
summary(y)
y
good <-x[,5]=6
good <-x[,5]==6
good
bad <-x[,5]!=6
y <-x[!bad,]
y
y <-x[bad,]
y
bad
x <-read.csv(hw1_data.csv)
read.csv(hw1_data.csv)
read.csv("hw1_data.csv")
bad <-x[,5]!=6
bad
bad <-x[,5]!=6
x[,5]
read.csv("hw1_data.csv")
x[,5]
x <-read.csv("hw1_data.csv")
x[,5]
bad <-x[,5]=6
x[,5]>6
x[,5]<6
x[,5]=6
bad <-x[,5]&x[,6]
bad
gooo <-x[ ,5]=6
good <-x[ ,5]=6
x[,5]
x <-read.csv("hw1_data.csv")
y <-x
y
y[,5]
good <- y[,5]=6
good <-complete.cases(y[,5]=6)
good <-complete.cases(y[,5]==6)
good
y <- vx
y <- x
y
y[ ,5]==6
good <-y[ ,5]==6
z <-y[good,]
z
summary(z[,4])
good <-y[,4]==5
y[good,]
summary(z[,4])
y[,4]==4
y <-x
y[,4]==5
y[,5]==5
good <-y[,5]==5
summary(y[good,])
summary(y[good,])
z <-y[good,]
summary(z[,1])
x <-c(2,3,4,10,12,6)
x[x<6]==0
x[x<=5] <-0
x
q(0)
q()
source("zhang.r")
source("zhang.r")
result <- li(3, 4, 5)
result
source("zhang.r")
result <- li(3, 4, 5)
result
result <- frank(c(1:3), c(4:6), c(7:95))
result <- frank(c(1:3), c(4:6), c(7:9))
result
q()
q()
library(datasets)
data(iris)
?iris
iris
lapply(iris,mean)
s <-split(iris,iris$Species)
lapply(s)
lapply(s, mean)
lapply(s, function(x) colmean(x[,Species]))
lapply(s, function(x) colMeans(x[,Species]))
lapply(s, function(x) colMeans(x[,"Species"]))
lapply(s, function(x) colMeans(x[,"Spepal Length"]))
lapply(s, function(x) colMeans(x[,"Sepal.Lenght"]))
lapply(s, function(x) colMeans(x[,"Sepal.Lenghth"]))
lapply(s, function(x) colMeans(x[,c("Sepal.Lenghth")]))
lapply(s, function(x) colMeans(x))
lapply(s, function(x) colMeans(x[,2]))
lapply(s, function(x) colMeans(x[,2:3]))
lapply(s, function(x) colMeans(x[,1:3]))
?nbind()
help("nbind")
help
colMeans(iris)
apply(iris,1,mean)
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
apply(iris,1,mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
mean(mtcars$mpg,mtcars$cyl)
tapply(mtcars$cyl,mtcars$mpg,mean)
tapply(mtcars$cyl,mtcars$mpg,mean, simplify=TRUE)
laaply(mtcars,mean)
with(mtcars,tapply(mpg,cyl,mean))
z <-factor(4,5,6,7,8)
z <-factor(mtcars[,2])
z
tapply(mtcars,z,mean)
tapply(mtcars[,1],z,mean)
tapply(mtcars[,4],z,mean)
y <-209.21429-82.63636
y
debug(is)
is
debug(ls)
ls
ls
q()
swirl()
library(swirl)
swirl()
swirl()
swirl()
x <-c(44,NA,5,NA)
x <-3x
y <-3x
x <-c(44,NA,5,NA)
x*3
y <-rnorm(1000)
z <-rep(NA,1000)
my_data <-sample(c(y,z),100)
my_na <-is.na(my_data)
my_na
my_eq <-my_data==NA
my_data==NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x <-c(rnorm(20),rep(NA,20))
x
x[1:10]
x[is.na(x)]
y <-x[is.na(x)]
y <-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!in.na(x)&x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[3,5,7]
x(i.e. x[0])
(i.e. x[0])
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <-c(11,2,NA)
name(vect2) <-c("foo","bar",norf"")
name(vect2) <-c("foo","bar",norf")
name(vect2) <-c("foo","bar","norf")
name(vect2) <-c("foo","bar","norf")
names(vect2) <-c("foo","bar",norf")
names(vect2) <-c("foo","bar",norf")
names(vect2) <-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <-c(1:20)
my_vector <-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <-my_vector
?matrix
my_matrix2 <-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_dat <-data.frame(patients,my_matrix)
my_data <-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <-c("patient", "age", "weight","bp","rating")
cnames <-c("patient", "age", "weight","bp","rating", "test")
colname(my_data,cname)
colnames(my_data,cname)
colnames(my_data,cnames)
?colnames
colnames(x) <-cnames
rbind(my_data,colnames(cnames))
colnames(my_data) <-cnames
colnames(cnames,my_data)
colnames(my_data) <-cnames
colnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
5!==7
5=7
5==7
!5==7
FALSE$FALSE==TRUE
FALSE & FALSE==TRUE
FALSE & FALSE
TRUE & C(TRUE,FALSE,FALSE)
c(TRUE,FALSE,FALSE)
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c
TRUE|| c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical("twins","twins")
xor(5==6,!FALSE)
ints <-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints)
all(ints>0)
q()
source("makevector.r")
numeric
numeric()
numeric(1:20)
numeric(20)
x <-c(1:20)
function(x)
0
q()
source("invert_v1.R")
source("inverse_v1.R")
zz1 <- matrix(1:4,2,2)
zz1
zz2 <- cacheSolve(zz1)
makeCacheMatrix()
zz2 <- cacheSolve(zz1)
makeCacheMatrix(zz1)
makeCacheMatrix()
y <- matrix(1:4,2,2)
makeCacheMatrix(y)
zz2 <- cacheSolve(y)
y <- c(1:4)
source("Exa1makeVector")
source("Exa1makeVector.r")
source("Exa2cachemean.r")
makeVector(x)
cachemean(x)
cachemean(y)
makeVector & cachemean
makeVector(x) & cachemean(x)
q()
q()
swirl()
library (swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list <-sapply(flags, class)
cls_vect <-sapply(flags, class)
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <-flags[,11:17]
head(flag_colors)
lapply(flag_color,sum)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <-flags[,19:23]
lapply(flag_shapes,range)
shape_mat <-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
debug(ls)
ls
ls(".")
ls(".")
0
end
exit
exit()
quit()
0
ex
exit(0)
quit(0)
quit
quit()
quit(status = 0)
debug(ls)
ls()
q()
set.seed(20)
x <-rnorm(100)
e<-rnorm(100,0,2)
y <-0.5+2*x+e
summary(y)
plot(x,y)
e <-rnorm(100, 0, 5)
plot(e)
e <-rnorm(100, 0, 10)
plot(e)
e <-rnorm(100, 0, 1)
plot(e)
set.seed(1)
x <-rnorm(100)
log.mu <-0.5+0.3*x
y <-log.mu
plot(y)
y <-rpois(100,1)
plot(y)
y <-rpois(100,5)
plot(y)
y <-rpois(100,50)
plot(y)
y <-rpois(100,0.1)
plot(y)
y <-rpois(100,0.5)
plot(y)
y <-rpois(100,100)
plot(y)
y <-rpois(100, exp(log.mu))
plot(y)
set.seed(1)
rpois(5,2)
summary(rpois(5,2))
dpois(5,2)
ppois(5,2)
qpois(5,2)
set.seed(10)
x <-rep(0:1, each=5)
x
e <-rnorm(10,0,20)
e
summary(e)
y <-0.5+2*x+e
y
plot(x,y)
library(datasets)
Rprof()
fit <- lm(y ~x1+x2)
Rprof(NULL)
by.total
set.seed(1)
rpois(5,2)
q(0)
q()
q()
q()
q()
fileUrl2 <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
download.file(fileUrl2, destfile="./n_gas.xlsx")
dateDownloaded <-date()
dateDownloaded
library(xlsx)
dat <-read.xlsx("./n_gas.xlsx", sheetIndex=1,header=TRUE, colIndex=7:15, rowIndex=18:23)
rowIndex <-18:23
row_Index <-18:23
col_Index <-7:15
dat <-read.xlsx("./n_gas.xlsx", sheetIndex=1,header=TRUE, colIndex=col_Index, rowIndex=row_Index)
dat <-read.xlsx("./n_gas.xlsx", sheetIndex=1,header=TRUE)
getwd
getwd()
q()
q()
house <-read.table("household_power_consumption.txt",header=TRUE,
colClasses=c("character", "character", "numeric",
"numeric", "numeric", "numeric", "numeric"
, "numeric","numeric"))
q()
fileUrl <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(fileUrl, destfile = ".")
download.file(fileUrl, destfile = "work")
download.file(fileUrl, destfile = "cameras.csv")
fileUrl <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = "cameras.xlsx")
download.file(fileUrl, destfile = "cameras.xls")
q()
con = url("https://api.github.com/users/jtleek/repos")
htmlyz = readLines(con)
close(con)
htmlyz
library(XML)
url1 <- "https://api.github.com/users/jtleek/repos"
htmlxl <- htmlTreeParse(url1, useInternalNodes=T)
htmlxl
xpathSApply(htmlxl, "//Title", xmlValue)
xpathSApply(htmlxl, "body", xmlValue)
xpathSApply(htmlxl, "//DTD", xmlValue)
?htmlTreeParse
htmlxl2 <- htmlTreeParse(url1)
htmlxl2
htmlxl2[,2]
htmlyz
word <- "datasharing"
url2 <- "https://api.github.com/users/jtleek/repos"
x3 <- scan(url2, sep="\n")
url5 <- "https://api.github.com/users/jtleek/repos"
webpage <- getURL("https://api.github.com/users/jtleek/repos"
)
webpage <- getURL("https://api.github.com/users/jtleek/repos")
library(RCurl)
webpage <- getURL("https://api.github.com/users/jtleek/repos")
webpage <- getURL("http://api.github.com/users/jtleek/repos")
webpage <- getURL("https://api.github.com/users/jtleek/repos")
url5 <- "https://api.github.com/users/jtleek/repos"
htmlyz5 = readLines(con)
htmlyz5 = readLines(url5)
htmlyz5
pagetree <- htmlTreeParse(htmlyz5, error=function(...){}, useInternalNodes = TRUE)
pagetree
pagetree
x5 <- xpathSApply(pagetree, "//*/table", xmlValue)
x5
x <- unlist(strsplit(x, "\n"))
x
q()
q()
?aggregate
?group_by
?K-Means
%%
?%/%
# a 2-dimensional example
x <- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
colnames(x) <- c("x", "y")
(cl <- kmeans(x, 2))
plot(x, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
ss <- function(x) sum(scale(x, scale = FALSE)^2)
d <-data.frame(1304287,28)
object_size(d)
library(pryr)
intall.package("pryr")
intall.packages("pryr")
?install.packages
install.packages("pryr")
library(pryr)
object_size(d)
help(integer)
help(numeric)
a <-c(1,2,3,4,5,6,7,8,9,10)
a <- as.characters(a)
a <- as.character(a)
b <- as.character(c(1,2,3,4,5,6))
c <- a %in% b
c
q()
q()
q()
setwd("./ReproducibleResearch/project1/RepData_PeerAssessment1")
setwd("..")
setwd("..")
setwd("..")
setwd("./ReproducibleResearch/ReData_PeerAssessment1")
setwd("./ReproducibleResearch/RepData_PeerAssessment1")
q()
